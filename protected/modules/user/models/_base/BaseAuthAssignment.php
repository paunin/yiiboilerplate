<?php

/**
 * This is the model base class for the table "AuthAssignment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "AuthAssignment".
 *
 * Columns in table "AuthAssignment" available as properties of the model,
 * followed by relations of table "AuthAssignment" available as properties of the model.
 *
 * @property string $itemname
 * @property string $userid
 * @property string $bizrule
 * @property string $data
 *
 * @property AuthItem $itemname0
 */
abstract class BaseAuthAssignment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'AuthAssignment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'AuthAssignment|AuthAssignments', $n);
	}

	public static function representingColumn() {
		return 'userid';
	}

	public function rules() {
		return array(
			array('itemname, userid', 'required'),
			array('itemname, userid', 'length', 'max'=>64),
			array('bizrule, data', 'safe'),
			array('bizrule, data', 'default', 'setOnEmpty' => true, 'value' => null),
			array('itemname, userid, bizrule, data', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'itemname0' => array(self::BELONGS_TO, 'AuthItem', 'itemname'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'itemname' => null,
			'userid' => Yii::t('app', 'Userid'),
			'bizrule' => Yii::t('app', 'Bizrule'),
			'data' => Yii::t('app', 'Data'),
			'itemname0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('itemname', $this->itemname);
		$criteria->compare('userid', $this->userid, true);
		$criteria->compare('bizrule', $this->bizrule, true);
		$criteria->compare('data', $this->data, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}