<?php

/**
 * This is the model base class for the table "token".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Token".
 *
 * Columns in table "token" available as properties of the model,
 * followed by relations of table "token" available as properties of the model.
 *
 * @property integer $id
 * @property integer $application_id
 * @property integer $user_id
 * @property string $token
 * @property string $expire_at
 * @property string $created_at
 * @property string $updated_at
 *
 * @property Application $application
 * @property User $user
 */
abstract class BaseToken extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'token';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Token|Tokens', $n);
	}

	public static function representingColumn() {
		return 'token';
	}

	public function rules() {
		return array(
			array('application_id, user_id, token, expire_at, created_at', 'required'),
			array('application_id, user_id', 'numerical', 'integerOnly'=>true),
			array('token', 'length', 'max'=>128),
			array('updated_at', 'safe'),
			array('updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, application_id, user_id, token, expire_at, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'application' => array(self::BELONGS_TO, 'Application', 'application_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'application_id' => null,
			'user_id' => null,
			'token' => Yii::t('app', 'Token'),
			'expire_at' => Yii::t('app', 'Expire At'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'application' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('application_id', $this->application_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('expire_at', $this->expire_at, true);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}